# SPDX-FileCopyrightText: Â© 2024 Jimmy Fitzpatrick <jcfitzpatrick12@gmail.com>
# This file is part of SPECTRE
# SPDX-License-Identifier: GPL-3.0-or-later

# --------------------------------- # 
# Build the base stage
# --------------------------------- # 
FROM ubuntu:22.04 AS base

# Stop interactive dialogue, only for the duration of the build.
ARG DEBIAN_FRONTEND=noninteractive

# By default, use `tmp` as the working directory for each stage.
WORKDIR /tmp

# Install the dependencies to install GNU Radio with UHD from source. Adapted from: 
# - https://wiki.gnuradio.org/index.php?title=UbuntuInstall#Install_Dependencies
# - https://wiki.gnuradio.org/index.php?title=LinuxInstall#Distributions_and_Commands
# - https://wiki.gnuradio.org/index.php?title=Draft-AN-445#Building_and_installing_UHD_from_source_code 
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y \
    libudev-dev libusb-1.0-0 git cmake g++ libboost-all-dev libgmp-dev swig python3-numpy \
    python3-mako python3-sphinx python3-lxml doxygen libfftw3-dev \
    libsdl1.2-dev libgsl-dev libqwt-qt5-dev libqt5opengl5-dev python3-pyqt5 \
    liblog4cpp5-dev libzmq3-dev python3-yaml python3-click python3-click-plugins \
    python3-zmq python3-scipy python3-gi python3-gi-cairo gir1.2-gtk-3.0 \
    libcodec2-dev libgsm1-dev libusb-1.0-0 libusb-1.0-0-dev libudev-dev python3-setuptools \
    pybind11-dev python3-matplotlib libsndfile1-dev \
    libsoapysdr-dev soapysdr-tools python3-pygccxml python3-pyqtgraph \
    libiio-dev libad9361-dev libspdlog-dev python3-packaging python3-jsonschema python3-qtpy

# First install UHD from source. 
RUN git clone https://github.com/EttusResearch/uhd.git && \
    cd uhd && \
    git checkout v4.6.0.0 && \
    cd host && \
    mkdir build && \ 
    cd build && \ 
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../ && \
    make -j3 && \
    make test && \
    make install && \
    ldconfig && \
    uhd_images_downloader

# Install volk from source
RUN git clone --recursive https://github.com/gnuradio/volk.git && \
    cd volk && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=/usr/bin/python3 ../ && \
    make && \
    make test && \
    make install && \
    ldconfig

# Install GNU Radio from sourcd
RUN git clone https://github.com/jcfitzpatrick12/gnuradio.git && \ 
    cd gnuradio && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=/usr/bin/python3 ../ && \
    make -j3 && \
    make && \ 
    make install && \
    ldconfig

# --------------------------------- # 
# Installing GNU Radio OOT modules
# --------------------------------- # 
FROM base AS gnuradio_oot_modules

# Install OOT module build dependencies.
RUN apt-get install -y \
    sudo \
    wget \
    expect 

# Create /etc/udev directories manually, as they are not present in the base image.
RUN mkdir -p /etc/udev/rules.d /lib/udev/rules.d

# Install the SDRPlay API, and auto accept the licence agreement
COPY --chmod=0755 ./scripts/rsp_api.expect ./rsp_api.expect
RUN wget https://www.sdrplay.com/software/SDRplay_RSP_API-Linux-3.15.2.run && \
    chmod +x SDRplay_RSP_API-Linux-3.15.2.run && \
    expect rsp_api.expect

# Install all the OOT modules.
COPY --chmod=0755 ./scripts/build_oot_module.sh build_oot_module.sh
RUN . ./build_oot_module.sh && \
    build_from_repo https://github.com/fventuri/gr-sdrplay3.git message-passing && \
    build_from_repo https://github.com/jcfitzpatrick12/gr-spectre.git v0.0.2


# --------------------------------- # 
# Install the flask server
# --------------------------------- # 
FROM base AS flask_server

# Copy in the flask server source code.
ADD src src

# Copy in the build requirements.
COPY ./pyproject.toml ./pyproject.toml

# Install the dependencies system-wide.
RUN apt-get install -y \
    python3-pip && \
    python3 -m pip install --upgrade pip && \
    python3 -m pip install .

# ------------------------------- # 
# Create the final runtime stage
# ------------------------------- # 
FROM base AS runtime

# Set the working directory for the final runtime image.
WORKDIR /app

# Define the spectre data directory path as an environment variable inside the container
ENV SPECTRE_DATA_DIR_PATH="/app/.spectre-data"

# Copy in the udev rules
COPY --from=gnuradio_oot_modules /etc/udev/rules.d /etc/udev/rules.d
COPY --from=gnuradio_oot_modules /lib/udev/rules.d /lib/udev/rules.d

# Copy in the OOT module files.
COPY --from=gnuradio_oot_modules /usr/local/lib /usr/local/lib
COPY --from=gnuradio_oot_modules /usr/local/include /usr/local/include
COPY --from=gnuradio_oot_modules /usr/include /usr/include
COPY --from=gnuradio_oot_modules /usr/lib /usr/lib

# Copy in the sdrplay api service executable.
COPY --from=gnuradio_oot_modules /opt/sdrplay_api/sdrplay_apiService /opt/sdrplay_api/sdrplay_apiService

# Copy in system-wide python packages for the flask server.
COPY --from=flask_server /usr/local/lib/python3.10/dist-packages /usr/local/lib/python3.10/dist-packages

# Copy the script and set permissions in one step
COPY --chmod=0755 ./scripts/start.sh ./start.sh

# Default executable for the container
CMD ["./start.sh"]


# ------------------------------- # 
# Create the development stage
# ------------------------------- # 
FROM runtime AS development

# Set environment variables required to enable gui functionality.
ENV DISPLAY=:0
ENV XDG_RUNTIME_DIR=/tmp/runtime-root
ENV NO_AT_BRIDGE=1

RUN apt-get install -y \
    # Install development tools.
    python3-pip vim tmux \
    # Required for the gnuradio GUI to run inside the container
    libgtk-3-dev x11-apps \
    # Required to subdue some warnings flagged on starting gnuradio-companion
    libcanberra-gtk-module libcanberra-gtk3-module \
    # Stop a warning when "opening from file" in gnuradio
    dbus-x11 && \
    # Upgrade packages for building and distributing `spectre-core`.
    pip install --upgrade build twine

# Clone then install the latest `spectre` and `spectre-core` code, ready for development.
COPY --chmod=0755 ./scripts/install_spectre_latest.sh ./install_spectre_latest.sh 
RUN ./install_spectre_latest.sh && rm ./install_spectre_latest.sh

# Copy in the OOT module grc files
COPY --from=gnuradio_oot_modules /usr/local/share/gnuradio/grc/blocks /usr/local/share/gnuradio/grc/blocks

CMD ["/bin/bash"]
